def environment = ''
def domain = ''
def component = ''
def comamnd = ''
pipeline {
    agent any
    parameters {
        choice(name: 'domain_choice',
          choices: 'buss\ncorp',
          description: 'Select domain to deploy?')     
        choice(name: 'environment_choice',
          choices: 'test\npreprod\nprod',
          description: 'Select environment to deploy?')
        choice(name: 'component_choice',
          choices: 'gke\nmaptiler\nmonitor\nnexus\njenkins\nproject',
          description: 'Select component to deploy?')
        choice(name: 'command_choice',
          choices: 'plan\napply\nsuperapply',
          description: 'Select command to deploy?')
    }

    stages {
        stage('ValidateParams') {
            steps {
                script{
                    if(params.component_choice.equals("jenkins") && params.domain_choice.equals("corp")) {
                        echo "Jenkins shouldn't be deployed on the Corp Domain. Aborting the deployment"
                        currentBuild.result = 'ABORTED'
                        return
                    }
                }
            }
        }
        stage('Build') {
            steps {
                echo "Environment ${params.environment_choice}"
                echo "Domain ${params.domain_choice}"
                echo "Component ${params.component_choice}"
                echo "Terraform Command ${params.command_choice}"
            }
        }
    }

}
